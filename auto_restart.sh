#!/bin/bash

# 0) –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–æ rl-swarm
if [ -d "/root/rl-swarm" ]; then
  RL_DIR="/root/rl-swarm"
elif [ -d "/workspace/rl-swarm" ]; then
  RL_DIR="/workspace/rl-swarm"
else
  echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω rl-swarm –Ω–∏ –≤ /root, –Ω–∏ –≤ /workspace"
  exit 1
fi

# 1) –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ "–ø–æ–¥–º–µ–Ω–Ω–æ–≥–æ" rm
FAKEBIN="$RL_DIR/fakebin"
mkdir -p "$FAKEBIN"

cat > "$FAKEBIN/rm" << EOF
#!/bin/bash
# –ï—Å–ª–∏ rm –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ –¥–ª—è modal-login/temp-data/*.json ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
if [[ "\$1" == "-r" && "\$2" == "$RL_DIR/modal-login/temp-data/"* ]]; then
  exit 0
else
  # –ò–Ω–∞—á–µ ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π rm
  exec /bin/rm "\$@"
fi
EOF

chmod +x "$FAKEBIN/rm"
# –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH –≤–ø–µ—Ä–µ–¥ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ
export PATH="$FAKEBIN:$PATH"

SCRIPT="$RL_DIR/run_rl_swarm.sh"
TMP_LOG="/tmp/rlswarm_stdout.log"
MAX_IDLE=900  # 15 –º–∏–Ω—É—Ç
RESTART_COUNT=0

KEYWORDS=(
  "BlockingIOError"
  "EOFError"
  "RuntimeError"
  "ConnectionResetError"
  "CUDA out of memory"
  "P2PDaemonError"
  "OSError"
  "error was detected while running rl-swarm"
  "Connection refused"
  "requests.exceptions.ConnectionError"
)

P2P_ERROR_MSG="P2PDaemonError('Daemon failed to start in 15.0 seconds')"

# –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
safe_cleanup() {
    echo "[$(date)] üßπ –í—ã–ø–æ–ª–Ω—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    
    # –ü–æ–ª—É—á–∞–µ–º PID —Ç–µ–∫—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –∏ –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
    CURRENT_PID=$$
    PARENT_PID=$(ps -o ppid= -p $$ | xargs)
    
    echo "[$(date)] üìù –ó–∞—â–∏—â–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã: $CURRENT_PID (—Ç–µ–∫—É—â–∏–π), $PARENT_PID (—Ä–æ–¥–∏—Ç–µ–ª—å)"
    
    # –£–±–∏–≤–∞–µ–º hivemind –ø—Ä–æ—Ü–µ—Å—Å—ã, –∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–∏–π —Å–∫—Ä–∏–ø—Ç
    ps aux | grep hivemind | grep -v grep | while read user pid rest; do
        if [[ "$pid" != "$CURRENT_PID" && "$pid" != "$PARENT_PID" ]]; then
            echo "[$(date)] üî™ –£–±–∏–≤–∞–µ–º hivemind –ø—Ä–æ—Ü–µ—Å—Å: $pid"
            kill -9 "$pid" 2>/dev/null || true
        fi
    done
    
    # –£–±–∏–≤–∞–µ–º python swarm –ø—Ä–æ—Ü–µ—Å—Å—ã, –∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–∏–π —Å–∫—Ä–∏–ø—Ç –∏ –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
    ps aux | grep "python.*swarm" | grep -v grep | while read user pid rest; do
        if [[ "$pid" != "$CURRENT_PID" && "$pid" != "$PARENT_PID" ]]; then
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –Ω–µ –Ω–∞—à –ª–∏ —ç—Ç–æ —Å–∫—Ä–∏–ø—Ç?
            if ! ps -p "$pid" -o cmd --no-headers | grep -q "$(basename $0)"; then
                echo "[$(date)] üî™ –£–±–∏–≤–∞–µ–º python swarm –ø—Ä–æ—Ü–µ—Å—Å: $pid"
                kill -9 "$pid" 2>/dev/null || true
            fi
        fi
    done
    
    # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ (–±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ)
    pkill -f "run_rl_swarm.sh" 2>/dev/null || true
    pkill -f "swarm_launcher.py" 2>/dev/null || true
    pkill -f "rgym_exp" 2>/dev/null || true
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    rm -f /tmp/hivemind_* 2>/dev/null || true
    rm -f /tmp/dht_* 2>/dev/null || true
    
    echo "[$(date)] ‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∂–¥–µ–º 3 —Å–µ–∫—É–Ω–¥..."
    sleep 3
}

echo "[$(date)] üèÅ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ rl-swarm..."
echo "[$(date)] üí° –ü–∞–∫–µ—Ç—ã –±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"

while true; do
  RESTART_COUNT=$((RESTART_COUNT + 1))
  echo "[$(date)] üöÄ –ó–∞–ø—É—Å–∫ #$RESTART_COUNT Gensyn-–Ω–æ–¥—ã (–≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏)..."

  rm -f "$TMP_LOG"
  # –¢–µ–ø–µ—Ä—å –≤–Ω—É—Ç—Ä–∏ run_rl_swarm.sh –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–º .venv
  ( sleep 1 && printf "n\n\n\n" ) | bash "$SCRIPT" 2>&1 | tee "$TMP_LOG" &
  PID=$!

  while kill -0 "$PID" 2>/dev/null; do
    sleep 5

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ª–∏–ø–∞–Ω–∏—è –ø–æ –ª–æ–≥—É
    if [ -f "$TMP_LOG" ]; then
      current_mod=$(stat -c %Y "$TMP_LOG")
      now=$(date +%s)
      if (( now - current_mod > MAX_IDLE )); then
        echo "[$(date)] ‚ö†Ô∏è –õ–æ–≥ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è –±–æ–ª–µ–µ $((MAX_IDLE/60)) –º–∏–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
        kill -9 "$PID" 2>/dev/null
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –ø—Ä–∏ –∑–∞–≤–∏—Å–∞–Ω–∏–∏
        safe_cleanup
        break
      fi
    fi

    # –ï—Å–ª–∏ P2PDaemonError ‚Äî –ø–∞—Ç—á–∏–º timeout
    if grep -q "$P2P_ERROR_MSG" "$TMP_LOG"; then
      echo "[$(date)] üõ† P2PDaemonError ‚Äî –ø–∞—Ç—á–∏–º startup_timeout..."

      DAEMON_FILE=$(find "$RL_DIR/.venv" -type f -path "*/site-packages/hivemind/p2p/p2p_daemon.py" | head -n1)
      if [[ -n "$DAEMON_FILE" ]]; then
        sed -i -E 's/(startup_timeout: *float *= *)15(,?)/\1120\2/' "$DAEMON_FILE"
        echo "[$(date)] ‚úèÔ∏è timeout patched in $DAEMON_FILE"
      else
        echo "[$(date)] ‚ùå p2p_daemon.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
      fi

      kill -9 "$PID" 2>/dev/null
      
      # –í—ã–ø–æ–ª–Ω—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –ø–æ—Å–ª–µ P2P –æ—à–∏–±–∫–∏
      safe_cleanup
      break
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö –æ—à–∏–±–æ–∫
    for ERR in "${KEYWORDS[@]}"; do
      if grep -q "$ERR" "$TMP_LOG"; then
        echo "[$(date)] ‚ùå –ù–∞–π–¥–µ–Ω–∞ –æ—à–∏–±–∫–∞ '$ERR'. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
        kill -9 "$PID" 2>/dev/null
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏
        safe_cleanup
        break 2
      fi
    done
  done

  echo "[$(date)] üîÅ –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã..."
  sleep 3
done
